@model IEnumerable<TimeNotas.App.Models.HourPointsModel>
@using System.Linq;

@{
    ViewData["Title"] = "Hour Points";
}

<h1>@ViewData["Title"]</h1>

<div class="row">
    <div class="col-md-5">
        <a class="btn btn-primary" asp-action="Create">New point</a>
        <a class="btn btn-dark" asp-action="PointNow">Point now</a>
        <a class="btn btn-success" asp-action="AutoGenerateTimeEntriesToday">Auto generate points today</a>
    </div>
    <div class="col-md-3"></div>
    <form asp-action="Index" class="col-md-4" method="get">
        <div class="input-group mb-3">
            <input id="isExcelExport" name="isExcelExport" type="hidden" />
            <input id="searchDate" name="searchDate" type="month" value="@ViewData["CurrentSearchDate"]" class="form-control" />
            <div class="input-group-append">
                <button id="actionButton" type="submit" class="btn btn-outline-primary"><i class="fa fa-search"></i> Search</button>
                <button type="button" class="btn btn-outline-primary dropdown-toggle dropdown-toggle-split" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <span class="sr-only">Toggle Dropdown</span>
                </button>
                <div class="dropdown-menu">
                    <a id="exportExcelLink" class="dropdown-item"><i class="fas fa-file-excel"></i> Export Excel</a>
                </div>
            </div>
        </div>
    </form>
</div>
<table class="table table-hover table-borderless">
    <thead>
        <tr>
            <th>Action</th>
            <th>
                @Html.DisplayNameFor(model => model.Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ExtraTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MissingTime)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td style="width: 5%; text-align: center;">
                    <a style="color: darkred" href="@Url.Action("DeleteHourPoints", new { hourPointsId = item.Id })"><i title="Delete" class="fas fa-trash-alt"></i></a>
                    <a href="@Url.Action("RecalculateTimes", new { hourPointsId = item.Id })"><i title="Recalculate times" class="fas fa-redo"></i></a>
                </td>
                <td title="@item.Date.DayOfWeek.ToString()">
                    @item.Date.ToString("dd/MM/yyyy")
                </td>
                <td>
                    @item.ExtraTime.ToString(@"hh\:mm")
                </td>
                <td>
                    @item.MissingTime.ToString(@"hh\:mm")
                </td>
                @{
                    var orderedTimeEntries = item.TimeEntries.OrderBy(t => t.DateHourPointed).ToList();
                    byte period = 1;

                    @for (int index = 0; index < ((orderedTimeEntries.Count % 2 == 0) ? orderedTimeEntries.Count : item.TimeEntries.Count + 1); index += 2)
                    {
                        <td title="@("Period " + period)" class="badge badge-pill @((index + 1 < orderedTimeEntries.Count) ? "badge-dark" : "badge-danger")" style="margin-right: 1%; margin-top: 1.5%">
                            @Html.ActionLink(orderedTimeEntries[index].ToString(), "Edit", new { timeEntryId = orderedTimeEntries[index].Id }, new { @style = "font-size: 100%; color: white" })

                            @if (index + 1 < orderedTimeEntries.Count)
                            {
                                @Html.ActionLink(orderedTimeEntries[index + 1].ToString(), "Edit", new { timeEntryId = orderedTimeEntries[index + 1].Id }, new { @style = "font-size: 100%; color: white" })
                            }
                        </td>
                        period++;
                    }
                }
            </tr>
        }
    </tbody>
    <tfoot>
        <tr>
            <th scope="row">Totals</th>
            <td></td>
            <td>@TimeSpan.FromTicks(Model.Sum(s => s.ExtraTime.Ticks)).ToString(@"hh\:mm")</td>
            <td>@TimeSpan.FromTicks(Model.Sum(s => s.MissingTime.Ticks)).ToString(@"hh\:mm")</td>
        </tr>
    </tfoot>
</table>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script type="text/javascript">
    $(function () {
        $("#searchDate").on("change", (event) => {
            let searchDate = event.target.value
            setExportExcelLink(searchDate);
        });

        setExportExcelLink($('#searchDate').val())
    })

    function setExportExcelLink(searchDate) {
         $('#exportExcelLink').attr('href', '@Url.Action("ExportUserHourPointsToExcel")' + `?searchDate=${searchDate}`)
    }

</script>